import jade.gui.GuiEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author haidar
 */
public class Gui extends javax.swing.JFrame {
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton mButton;
    private javax.swing.JLabel mLabelIP;
    private javax.swing.JLabel mLabelPort;
    private javax.swing.JLabel mLableNum;
    private javax.swing.JSlider mSlider;
    private javax.swing.JTextField mTextIP;
    private javax.swing.JTextField mTextPort;
    private javax.swing.JToggleButton mToggleButton;
    private AgentWithGUI mAgent;
 // End of variables declaration 
    /**
     * Creates new form Gui
     */
    public Gui() {
    	//setLook();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mTextIP = new javax.swing.JTextField();
        mTextPort = new javax.swing.JTextField();
        mSlider = new javax.swing.JSlider();
        mLabelIP = new javax.swing.JLabel();
        mLabelPort = new javax.swing.JLabel();
        mToggleButton = new javax.swing.JToggleButton();
        mButton = new javax.swing.JButton();
        mLableNum = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 250));
        
        this.setVisible(true);
        mSlider.setMajorTickSpacing(1000);
        mSlider.setMaximum(10000);
        mSlider.setMinorTickSpacing(100);
        mSlider.setPaintLabels(true);
        mSlider.setPaintTicks(true);
        mSlider.setSnapToTicks(true);
        mSlider.setToolTipText("");
        mSlider.setValue(0);
        mSlider.setAutoscrolls(true);
        mSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        mSlider.setName(""); // NOI18N
        mSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mSliderStateChanged(evt);
            }
        });

        mLabelIP.setText("Attacked Server IP");

        mLabelPort.setText("Attacked Server Port");

        mToggleButton.setText("Off");
        mToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mToggleButtonItemStateChanged(evt);
            }
        });
        

        mButton.setText("Submit");
        mButton.setAlignmentX(0.5F);
        mButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        mButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButtonActionPerformed(evt);
            }
        });

        mLableNum.setText("0");

        jLabel1.setText("Attack");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mLabelPort)
                    .addComponent(mLabelIP)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mToggleButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(mTextIP, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addComponent(mTextPort)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(mButton, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(mLableNum)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mLabelIP)
                            .addComponent(mTextIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mLabelPort)
                        .addComponent(mTextPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mToggleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(mLableNum))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mButton)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        
        pack();
        
    }// </editor-fold>                        

    private void mButtonActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	
        String mIP = mTextIP.getText();
        String mPort = mTextPort.getText();
        Integer mAgentNumber = mSlider.getValue();
        Boolean mAttack = mToggleButton.isSelected();
        
        GuiEvent mGuiEvent = new GuiEvent(this, 1);
        
        mGuiEvent.addParameter(mIP);
        mGuiEvent.addParameter(mPort);
        mGuiEvent.addParameter(mAgentNumber);
        mGuiEvent.addParameter(mAttack);
        
        mAgent.postGuiEvent(mGuiEvent);
    }
    private void setLook(){
    	try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }  
        } catch (Exception e) {
        	System.out.println("-----------------");
        	e.printStackTrace();}
    }

    private void mSliderStateChanged(javax.swing.event.ChangeEvent evt) {
    	
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	String mValue = Integer.toString(mSlider.getValue());
            	mLableNum.setText(mValue);
            }
        });
        
    }                                    

    private void mToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {                                               
        
        int state = evt.getStateChange();
        if (state == java.awt.event.ItemEvent.SELECTED) {
        	java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                	mToggleButton.setText("ON");
                }
            });
          
        } else {
        	java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                	mToggleButton.setText("Off");
                }
            });
        }
    }                                              
    
    public void setAgent(AgentWithGUI agentWithGUI) {
        mAgent = agentWithGUI;
    }             
}
